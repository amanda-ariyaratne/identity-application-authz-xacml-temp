openapi: 3.0.0
info:
  description: >
    This document specifies an **Entitlements RESTful API** for **WSO2
    Identity Server**.
  version: "v1"
  title: WSO2 Identity Server - Entitlements Rest API
  termsOfService: 'http://swagger.io/terms/'
  contact:
    name: WSO2
    url: 'http://wso2.com/products/identity-server/'
    email: architecture@wso2.org
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
security:
  - basicAuth: []
  - oauth2: []
tags:
  - name: Policy Administration Point
  - name: Policy Subscribers
  - name: Policy Combining Algorithms
  - name: Publish Policies

paths:
  /entitlements/publish:
    get:
      tags:
        - Publish Policies
      operationId: publishPolicies
      summary: |
        Publish Policies
      description: |
        This API provides the capability to Publish Policies.<br>
          <b>Permission required:</b> <br>
              * /permission/admin/manage/identity/entitlementmgt/publish <br>
          <b>Scope required:</b> <br>
              * internal_entitlement_mgt_publish
      parameters:
        - $ref: '#/components/parameters/PolicySubscriberDTO'

      responses:
        '200':
          description: Published Policies
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /entitlements/subscribers:
    get:
      tags:
        - Policy Subscribers
      operationId: getAllSubscribers
      summary: |
        List All Subscribers
      description: |
        This API provides the capability to retrieve the list of Subscribers available.<br>
          <b>Permission required:</b> <br>
              * /permission/admin/manage/identity/entitlementsubscribermgt/view <br>
          <b>Scope required:</b> <br>
              * internal_entitlement_subscriber_mgt_view
      parameters:
        - $ref: '#/components/parameters/SubscriberSearchString'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
          description: A list of subscribers
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Policy Subscribers
      operationId: addSubscriber
      summary: |
        Add Subscriber
      description: |
        This API provides the capability to add a Subscriber.<br>
          <b>Permission required:</b> <br>
              * /permission/admin/manage/identity/entitlementsubscribermgt/create <br>
          <b>Scope required:</b> <br>
              * internal_entitlement_subscriber_mgt_create
      parameters:
        - $ref: '#/components/parameters/PublisherDataHolderDTO'
      responses:
        '200':
          description: Successful
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /entitlements/subscribers/{id}:
    get:
      tags:
        - Policy Subscribers
      operationId: getSubscriber
      summary: |
        Get Subscriber
      description: |
        This API provides the capability to retrieve the Subscriber for a given id.<br>
          <b>Permission required:</b> <br>
              * /permission/admin/manage/identity/entitlementsubscribermgt/view <br>
          <b>Scope required:</b> <br>
              * internal_entitlement_subscriber_mgt_view
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The subscribers for the given id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublisherDataHolderDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - Policy Subscribers
      operationId: editSubscriber
      summary: |
        Edit Subscriber
      description: |
        This API provides the capability to edit a Subscriber.<br>
          <b>Permission required:</b> <br>
              * /permission/admin/manage/identity/entitlementsubscribermgt/update <br>
          <b>Scope required:</b> <br>
              * internal_entitlement_subscriber_mgt_update
      parameters:
        - $ref: '#/components/parameters/PublisherDataHolderDTO'
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      tags:
        - Policy Subscribers
      operationId: deleteSubscriber
      summary: |
        Delete Subscriber
      description: |
        This API provides the capability to delete a Subscriber.<br>
          <b>Permission required:</b> <br>
              * /permission/admin/manage/identity/entitlementsubscribermgt/delete <br>
          <b>Scope required:</b> <br>
              * internal_entitlement_subscriber_mgt_delete
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Delete Successful
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /entitlements/policies:
    get:
      tags:
        - Policy Administration Point
      operationId: getAllPolicies
      summary: |
        List All Policies
      description: |
        This API provides the capability to retrieve the list of Policies available.<br>
          <b>Permission required:</b> <br>
              * /permission/admin/manage/identity/entitlementmgt/view <br>
          <b>Scope required:</b> <br>
              * internal_entitlement_mgt_view
      parameters:
        - $ref: '#/components/parameters/policyTypeFilter'
        - $ref: '#/components/parameters/policySearchString'
        - $ref: '#/components/parameters/pageNumber'
        - $ref: '#/components/parameters/isPDPPolicy'
      responses:
        '200':
          description: A list of policies
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyDataModel'

        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


    post:
      summary: Create policy
      tags:
        - Policy Administration Point
      description: |
        This API provides the capability to create Policies.<br>
          <b>Permission required:</b> <br>
              * /permission/admin/manage/identity/entitlementmgt/create <br>
          <b>Scope required:</b> <br>
              * internal_entitlement_mgt_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyDTO'
      responses:
        '201':
          description: Policy created
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    patch:
      summary: Update policy
      tags:
        - Policy Administration Point
      description: |
        This API provides the capability to Update a Policy.<br>
          <b>Permission required:</b> <br>
              * /permission/admin/manage/identity/entitlementmgt/update <br>
          <b>Scope required:</b> <br>
              * internal_entitlement_mgt_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyDTO'
      responses:
        '200':
          description: Policy updated.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /entitlements/policies/{id}:
    delete:
      summary: Delete policy
      tags:
        - Policy Administration Point
      description: |
        This API provides the capability to delete a Policy.<br>
          <b>Permission required:</b> <br>
              * /permission/admin/manage/identity/entitlementmgt/delete <br>
          <b>Scope required:</b> <br>
              * internal_entitlement_mgt_delete
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Policy deleted
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      summary: Get policy by id
      tags:
        - Policy Administration Point
      description: |
        This API provides the capability to Get a Policy.<br>
          <b>Permission required:</b> <br>
              * /permission/admin/manage/identity/entitlementmgt/view <br>
          <b>Scope required:</b> <br>
              * internal_entitlement_mgt_view
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/isPDPPolicy'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyDataModel'
          description: A policy object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /entitlements/combining-algorithm:
    get:
      summary: Get global policy combining algorithm
      tags:
        - Policy Combining Algorithms
      description: |
        This API provides the capability to get the gloabl policy combining algorithm.<br>
          <b>Permission required:</b> <br>
              * /permission/admin/manage/identity/policycombiningalgorithm/view <br>
          <b>Scope required:</b> <br>
              * internal_entitlement_mgt_policy_comb
      responses:
        '200':
          description: Policy combining algorithm is set.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyCombiningAlgorithmDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


    patch:
      summary: Set policy combining algorithm
      tags:
        - Policy Combining Algorithms
      description: |
        This API provides the capability to set the policy combining algorithm.<br>
          <b>Permission required:</b> <br>
              * /permission/admin/manage/identity/policycombiningalgorithm/update <br>
          <b>Scope required:</b> <br>
              * internal_entitlement_mgt_policy_comb
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyCombiningAlgorithmDTO'
      responses:
        '200':
          description: Policy combining algorithm is set.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


components:
  parameters:
    SubscriberSearchString:
      in: query
      name: subscriber search string
      required: false
      description: |
        Subscriber search string filter
      schema:
        type: string

    PolicySubscriberDTO:
      in: query
      name: subscriber search string
      required: false
      description: |
        Subscriber search string filter
      schema:
        $ref: '#/components/schemas/PolicySubscriberDTO'

    policyTypeFilter:
      in: query
      name: policyType
      required: false
      description: |
        Policy Type filter
      schema:
        type: string
        enum:
          - ALL
          - PDP_ENABLED
          - PDP_DISABLED

    policySearchString:
      in: query
      name: policySearchString
      required: false
      description: |
        Policy search string filter
      schema:
        type: string

    pageNumber:
      in: query
      name: pageNumber
      required: false
      description: |
        Page Number filter
      schema:
        type: integer
        default: 1
        minimum: 1

    isPDPPolicy:
      in: query
      name: isPDPPolicy
      required: true
      description: |
        Whether PDP Policy or PAP Policy
      schema:
        type: boolean
        default: true

    PublisherDataHolderDTO:
      in: query
      name: is PDP Policy
      required: true
      description: |
        Whether PDP Policy or PAP Policy
      schema:
        $ref: '#/components/schemas/PublisherDataHolderDTO'

  securitySchemes:
    basicAuth:
      scheme: basic
      type: http

    oauth2:
      flows:
        authorizationCode:
          authorizationUrl: https://localhost:9443/oauth/authorize
          scopes: {}
          tokenUrl: https://localhost:9443/oauth/token
      type: oauth2

  schemas:
    PolicySubscriberDTO:
      type: object
      properties:
        policyIds:
          type: array
          items:
            type: string
        subscriberIds:
          type: array
          items:
            type: string
        action:
          type: string
        version:
          type: string
        enable:
          type: boolean
        order:
          type: integer

    PublisherDataHolderDTO:
      type: object
      properties:
        moduleName:
          type: string
        publisherPropertyDTO:
          type: array
          items:
            $ref: '#/components/schemas/PublisherPropertyDTO'

    PublisherPropertyDTO:
      type: object
      properties:
        id:
          type: string
        displayName:
          type: string
        value:
          type: string
        required:
          type: boolean
        displayOrder:
          type: integer
        secret:
          type: boolean
        module:
          type: string

    PolicyCombiningAlgorithmDTO:
      type: object
      properties:
        policyCombiningAlgorithm:
          type: string
    PolicyDataModel:
      type: array
      items:
        $ref: '#/components/schemas/PolicyDTO'
    PolicyDTO:
      type: object
      properties:
        policy:
          type: string
        policyId:
          type: string
        active:
          type: boolean
        promote:
          type: boolean
        policyType:
          type: string
        policyEditor:
          type: string
        policyEditorData:
          type: array
          items:
            type: string
        policyOrder:
          type: integer
        version:
          type: string
        lastModifiedTime:
          type: string
        lastModifiedUser:
          type: string
        attributeDTOs:
          type: array
          items:
            $ref: '#/components/schemas/AttributeDTOs'
        policySetIdReferences:
          type: array
          items:
            type: string
        policyIdReferences:
          type: array
          items:
            type: string
    AttributeDTOs:
      type: object
      properties:
        attributeValue:
          type: string
        attributeDataType:
          type: string
        attributeId:
          type: string
        attributeCategory:
          type: string
    Error:
      type: object
      properties:
        code:
          type: string
          example: EXT-00000
        message:
          type: string
          example: Some error message.
        description:
          type: string
          example: Some error description.
        traceId:
          type: string
          example: e0fbcfeb-3617-43c4-8dd0-7b7d38e13047
servers:
  - url: 'https://{server-url}/t/{tenant-domain}/api/server/v1'
    variables:
      tenant-domain:
        default: "carbon.super"
      server-url:
        default: "localhost:9443"
